#!/usr/bin/env bash
#
# Autor:       Fernando Souza - https://www.youtube.com/@fernandosuporte/
# Colabora√ß√£o: 
# Data:        09/08/2025 as 20:40:02
# Homepage:    https://github.com/tuxslack/acoes-personalizadas
# Licen√ßa:     MIT


ZIP="acoes-personalizadas-master.zip"

# ----------------------------------------------------------------------------------------

# Uso de cores para destacar

RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RESET='\033[0m'

# ------------------------------------------------------------------------

# üîß Fun√ß√£o de remo√ß√£o automatizada

remover() {

  clear
  
  echo -e "\n${GREEN}üßπ Iniciando remo√ß√£o... ${RESET} \n"


BASE="${ZIP%.zip}"

unzip -Z1 "$ZIP" | grep -v '/$' | grep -vE "^$BASE/[^/]+$" | while IFS= read -r arquivo; do

    caminho="${arquivo#acoes-personalizadas-master/}"

    # Define destino com base no prefixo
    
    if [[ "$caminho" == config/* ]]; then
    
      destino="$HOME/.config/${caminho#config/}"
      
    elif [[ "$caminho" == usr/* ]]; then
    
      destino="/${caminho}"
      
    else
    
      destino="$HOME/.config/$caminho"
      
    fi

    # Verifica exist√™ncia com sudo (para arquivos protegidos)
    
    if sudo test -e "$destino"; then
    
      echo -e "${GREEN}Removendo: $destino ${RESET}"
      
      sudo rm -rf "$destino"
      
      if sudo test ! -e "$destino"; then
      
        echo -e "\n${GREEN}‚úÖ Removido com sucesso. ${RESET} \n"

      else
      
        echo -e "\n${RED}‚ö†Ô∏è Falha ao remover: $destino ${RESET} \n"
        
      fi
      

    else
    
      echo "‚ÑπÔ∏è Arquivo n√£o encontrado: $destino"
      
    fi
    
  done

  

  echo -e "\n${GREEN}Removendo documenta√ß√£o /usr/share/doc/scripts para menu de contexto/... ${RESET} \n"

  sudo rm -Rf /usr/share/doc/scripts\ para\ menu\ de\ contexto/ && echo -e "\n${GREEN}‚úÖ Pasta /usr/share/doc/scripts para menu de contexto/ removida com sucesso.${RESET} \n" || echo -e "\n${RED}‚ùå Falha ao remover /usr/share/doc/scripts para menu de contexto/. ${RESET} \n" >&2

  # sudo rm -Rf /usr/share/icons/extras/

  
  # Remove diret√≥rio ~/.config/Thunar se existir
  
if rm -rf ~/.config/Thunar; then

  if [ ! -d ~/.config/Thunar ]; then
  
    echo -e "\n${GREEN}‚úÖ Pasta ~/.config/Thunar removida com sucesso. ${RESET} \n"

  else
  
    echo -e "\n${RED}‚ö†Ô∏è Pasta ainda existe ap√≥s tentativa de remo√ß√£o. ${RESET} \n"

  fi
  

else

  echo -e "\n${RED}‚ùå Erro ao tentar remover ~/.config/Thunar. ${RESET} \n" >&2
  
fi






        
# Fun√ß√£o para verificar e remover diret√≥rio vazio

verifica_e_remove() {

    local dir="$1"
    
    # Verifica se o diret√≥rio existe
    
    if [ -d "$dir" ]; then
    
        # Verifica se o diret√≥rio est√° vazio
        
        if [ -z "$(ls -A "$dir")" ]; then

    echo -e "${RED}       

‚ö†Ô∏è  Cuidado: 

Use rm -rf apenas se tiver certeza absoluta de que os arquivos n√£o s√£o necess√°rios. Esse comando n√£o 
pede confirma√ß√£o e pode causar problemas se usado incorretamente.

${RESET}"
       
            # Pergunta ao usu√°rio se deseja remover
            
            read -p "O diret√≥rio $dir est√° vazio. Deseja remov√™-lo? (s/n): " resposta
            
            if [[ "$resposta" =~ ^[Ss]$ ]]; then
            
                sudo rm -rf "$dir"
                
                echo -e "\n${GREEN}‚úÖ Diret√≥rio $dir removido com sucesso. ${RESET} \n"

            else
            
                echo -e "\n${RED}‚ùé Remo√ß√£o de $dir cancelada pelo usu√°rio. ${RESET} \n"
            fi
            
        else

            echo -e "\n${RED}üìÅ O diret√≥rio $dir n√£o est√° vazio. N√£o ser√° removido. ${RESET} \n"
        fi

    else

        echo -e "\n${RED}‚ÑπÔ∏è O diret√≥rio $dir n√£o existe. ${RESET} \n"

    fi
}


# Verifica se h√° processos KDE ativos


# Se o KDE estiver em execu√ß√£o, voc√™ pode ver processos como:

# plasmashell ‚Äì interface do KDE Plasma

# kwin_x11 ou kwin_wayland ‚Äì gerenciador de janelas do KDE

# kded5 ‚Äì daemon de servi√ßos do KDE

# ksmserver ‚Äì gerenciador de sess√£o

# klauncher ‚Äì inicializador de aplicativos

# krunner ‚Äì lan√ßador de comandos



if ps aux | grep -E 'kde|plasma|kwin|kded|klauncher|ksmserver' | grep -v grep > /dev/null; then

   echo -e "\n${RED}‚ö†Ô∏è Processos KDE est√£o em execu√ß√£o. Diret√≥rio /usr/share/kservices5 n√£o ser√° removido. ${RESET} \n"

else

   echo -e "\n${GREEN}Nenhum processo KDE encontrado. ${RESET} \n"


# Se voc√™ n√£o estiver usando o ambiente gr√°fico KDE, o diret√≥rio 
# /usr/share/kservices5 pode conter arquivos desnecess√°rios 
# relacionados a servi√ßos do KDE.

    verifica_e_remove "/usr/share/kservices5"
        
fi


# Verifica os outros diret√≥rios

verifica_e_remove "/usr/share/icons/extras"
verifica_e_remove "/usr/share/doc"


# ------------------------------------------------------------------------

ARQUIVO="/etc/xdg/Thunar/modelo-uca.xml"

# Verifica se o arquivo existe

if [ -f "$ARQUIVO" ]; then

    echo "üìÑ O arquivo $ARQUIVO existe."
    
    sudo rm -rf "$ARQUIVO"
  
    echo -e "\n${GREEN}‚úÖ Arquivo removido com sucesso. ${RESET} \n"

else

    echo -e "\n‚ÑπÔ∏è O arquivo $ARQUIVO n√£o existe. \n"
    
fi

# ------------------------------------------------------------------------

verifica_e_remove "/etc/xdg/Thunar"


  echo -e "\n${GREEN}‚úÖ Remo√ß√£o conclu√≠da. ${RESET} \n"

  
}

# ------------------------------------------------------------------------

# üì¶ Fun√ß√£o de instala√ß√£o

instalar() {

  clear
  
  echo -e "\n${GREEN}üì¶ Iniciando instala√ß√£o... ${RESET} \n"

  sleep 1

  remover

  # Remove diret√≥rio antigo se existir
  
  rm -rf acoes-personalizadas-master


  echo -e "\n${GREEN}üìÅ Extraindo arquivos... ${RESET} \n"

  unzip -d . "$ZIP" || { echo -e "\n${RED}‚ùå Falha ao extrair o ZIP. ${RESET} \n"; exit 1; }

  cd acoes-personalizadas-master || { echo -e "\n${RED}‚ùå Erro ao acessar diret√≥rio extra√≠do. ${RESET} \n"; exit 1; }

  # Instalando...
  
  echo -e "\n${GREEN}üöÄ Instalando arquivos... ${RESET} \n"

  # Com tratamento de erro
  
  mkdir -p ~/.config
  
  mv config/* ~/.config/ && echo -e "\n${GREEN}‚úÖ Configura√ß√µes movidas para ~/.config ${RESET} \n" || { echo -e "\n${RED}\n‚ùå Erro ao mover configura√ß√µes ${RESET} \n" >&2; exit 1; }

  
  sudo cp -r usr/* /usr/ && echo -e "\n${GREEN}‚úÖ Arquivos copiados para /usr ${RESET} \n" || { echo -e "\n${RED}‚ùå Erro ao copiar arquivos ${RESET} \n" >&2; exit 1; }




# üåê A√ß√µes personalizadas globais - Thunar
  
# Embora a maioria das configura√ß√µes seja por usu√°rio.

# Se voc√™ quiser definir a√ß√µes dispon√≠veis para todos os usu√°rios, pode colocar o arquivo 
# uca.xml em /etc/xdg/Thunar/ (se suportado pela distro).


UCA_GLOBAL="/etc/xdg/Thunar/uca.xml"

# Verifica se o arquivo existe

if [ -f "$UCA_GLOBAL" ]; then

    echo -e "\nüìÑ O arquivo $UCA_GLOBAL existe. \n"

    read -p "Deseja atualizar esse arquivo? (s/n): " resposta
    
    if [[ "$resposta" =~ ^[Ss]$ ]]; then
    
        echo -e "\n${GREEN}Copiando $HOME/.config/Thunar/uca.xml  para /etc/xdg/Thunar/modelo-uca.xml ${RESET} \n"
        
        sudo mkdir -p /etc/xdg/Thunar/
        
        sudo cp -r  $HOME/.config/Thunar/uca.xml /etc/xdg/Thunar/modelo-uca.xml
        
        echo -e "${YELLOW}
        üõ†Ô∏è Como usar:
        
        Para instala√ß√£o em novos usu√°rios:
        
        $ cp -r /etc/xdg/Thunar/modelo-uca.xml ~/.config/Thunar/uca.xml
        
        ${RESET}"


        
    else
    
        echo -e "\n${RED}‚ùé Atualiza√ß√£o cancelada pelo usu√°rio. ${RESET} \n"
        
    fi
    
else

        echo -e "\n‚ÑπÔ∏è O arquivo $UCA_GLOBAL n√£o existe. \n"
      
        echo -e "\n${GREEN}Copiando $HOME/.config/Thunar/uca.xml  para /etc/xdg/Thunar/modelo-uca.xml ${RESET} \n"
        
        sudo mkdir -p /etc/xdg/Thunar/
        
        sudo cp -r  $HOME/.config/Thunar/uca.xml /etc/xdg/Thunar/modelo-uca.xml

        
        echo -e "${YELLOW}
        üõ†Ô∏è Como usar:
        
        Para instala√ß√£o em novos usu√°rios:
        
        $ cp -r /etc/xdg/Thunar/modelo-uca.xml ~/.config/Thunar/uca.xml
        
        ${RESET}"
        
fi


echo -e "\n\n"

          
  # Configurando...
  
  sudo chmod +x /usr/local/bin/*.sh && echo -e "\n${GREEN}‚úÖ Scripts tornados execut√°veis. ${RESET} \n"

  echo -e "\n${GREEN}‚úÖ Instala√ß√£o conclu√≠da! ${RESET}\n"
  
}

# ------------------------------------------------------------------------

# üß≠ Menu de controle

case "$1" in

  instalar)
    instalar
    ;;
    
  remover)
    remover
    ;;
    
  *)
  
    clear
    
    echo -e "\n${RED}‚ùì Uso: $0 {instalar|remover} ${RESET} \n"

    exit 1

    ;;
    
esac

# ------------------------------------------------------------------------

exit 0

